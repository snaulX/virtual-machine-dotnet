import std; //link platform std
_loads("System"); //load library of vm (framework) System used встренную function from platform std
Virtual {
	beep;
	plus : <12:double>, <10:double>, <678:double>;
} //write script with operator Virtual
class public Tuzik {
	function public string toString() => "Tuzik"; //operator => return value. After value always ставится ;
	function public greet(string text) -> print("Hello, " + text); //operator -> just run expression. After expression always ставится ;
	var public int age; //create new variable with default getter and setter
	var public string name = set (string name) {
		Virtual {
			set : @this.&name , @name ;
			System.print : <Your name is :string>, @this.@name ;
		}
	}
	get {
		Virtual {
			System.print : <Your name is \u003A:string>, @this.@name ;
			return @this.@name ;
		}
	}; //add getter and setter
}

enum public BaseType {
	VOID,
	BOOL,
	BYTE,
	CHAR,
	INT,
	FLOAT,
	STRING,
	LONG,
	DOUBLE,
	SHORT = 12 //set value to constant of enumeration
}

function print(string text) { 
	Virtual {
		System.print : @text ; 
	}
} //if in body of function be block - all body of function transferred to block

operator int +(left int a, right int b) {
	Virtual {
		plus : @a , @b ; 
	}
} //operators have left and right arguments

var int sum = 12 + 13 ; //call sum.set(12 + 13) and in arguments call operator + 
print((string) sum); //call function print with arguments convertable variable sum